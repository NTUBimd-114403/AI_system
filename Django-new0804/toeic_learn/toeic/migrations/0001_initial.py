# Generated by Django 5.1.7 on 2025-07-22 10:28

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('exam_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('exam_type', models.CharField(choices=[('reading', 'Reading'), ('vocab', 'Vocabulary'), ('listen', 'Listening'), ('mixed', 'Mixed')], max_length=20)),
                ('part', models.IntegerField(blank=True, choices=[(None, '不限 Part'), (2, 'Part 2 - 應答問題'), (3, 'Part 3 - 簡短對話'), (5, 'Part 5 - 句子填空'), (6, 'Part 6 - 段落填空'), (7, 'Part 7 - 單篇閱讀')], null=True)),
                ('duration_minutes', models.IntegerField()),
                ('total_questions', models.IntegerField()),
                ('passing_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ListeningMaterial',
            fields=[
                ('material_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('audio_url', models.CharField(max_length=255)),
                ('transcript', models.TextField()),
                ('accent', models.CharField(max_length=50)),
                ('topic', models.CharField(max_length=255)),
                ('listening_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('source', models.CharField(max_length=255)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReadingPassage',
            fields=[
                ('passage_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('word_count', models.IntegerField()),
                ('reading_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('topic', models.CharField(max_length=255)),
                ('source', models.CharField(max_length=255)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True)),
                ('nickname', models.CharField(max_length=50)),
                ('point', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExamSession',
            fields=[
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time_limit_enabled', models.BooleanField(default=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('abandoned', 'Abandoned'), ('timeout', 'Timeout')], max_length=20)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toeic.exam')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('result_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_questions', models.IntegerField()),
                ('correct_answers', models.IntegerField()),
                ('total_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_passed', models.BooleanField()),
                ('reading_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('vocab_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('listen_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('completed_at', models.DateTimeField()),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='toeic.examsession')),
            ],
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('change_amount', models.IntegerField()),
                ('reason', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_type', models.CharField(choices=[('reading', 'Reading'), ('listen', 'Listening')], max_length=20)),
                ('part', models.IntegerField(blank=True, choices=[(None, '不限 Part'), (2, 'Part 2 - 應答問題'), (3, 'Part 3 - 簡短對話'), (5, 'Part 5 - 句子填空'), (6, 'Part 6 - 段落填空'), (7, 'Part 7 - 單篇閱讀')], null=True)),
                ('question_text', models.TextField()),
                ('option_a_text', models.TextField()),
                ('option_b_text', models.TextField()),
                ('option_c_text', models.TextField()),
                ('option_d_text', models.TextField()),
                ('option_e_text', models.TextField(blank=True, null=True)),
                ('is_correct', models.CharField(max_length=1)),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Level 1'), (2, 'Level 2'), (3, 'Level 3'), (4, 'Level 4'), (5, 'Level 5')])),
                ('explanation', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question_category', models.CharField(choices=[('tense', '時態'), ('pos', '詞性'), ('syntax', '句型結構'), ('vocab', '單字')], default='vocab', max_length=10, verbose_name='分類題目類型')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='toeic.listeningmaterial')),
                ('passage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='toeic.readingpassage')),
            ],
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('answer_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('selected_options', models.CharField(max_length=10)),
                ('answer_text', models.TextField(blank=True, null=True)),
                ('is_correct', models.BooleanField()),
                ('answer_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toeic.question')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toeic.examsession')),
            ],
        ),
        migrations.CreateModel(
            name='ExamQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_order', models.IntegerField()),
                ('scores', models.DecimalField(decimal_places=2, max_digits=5)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toeic.exam')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toeic.question')),
            ],
            options={
                'unique_together': {('exam', 'question')},
            },
        ),
    ]
